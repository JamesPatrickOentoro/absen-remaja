{"ast":null,"code":"import * as XLSX from 'xlsx';\nimport axios from 'axios';\nexport default {\n  name: 'Students',\n  data() {\n    return {\n      students: [],\n      searchName: '',\n      filterStatus: ''\n    };\n  },\n  mounted() {\n    this.fetchStudents();\n  },\n  methods: {\n    async fetchStudents() {\n      try {\n        const response = await axios.get('/api/students', {\n          params: {\n            name: this.searchName,\n            status: this.filterStatus\n          }\n        });\n        this.students = response.data;\n      } catch (error) {\n        console.error('Error fetching students:', error);\n      }\n    },\n    searchStudents() {\n      this.fetchStudents();\n    },\n    saveToExcel(data) {\n      const ws = XLSX.utils.json_to_sheet(data);\n      const wb = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n      XLSX.writeFile(wb, 'students-data.xlsx');\n    },\n    generateSheet() {\n      this.saveToExcel(this.students);\n    }\n  }\n};","map":{"version":3,"names":["XLSX","axios","name","data","students","searchName","filterStatus","mounted","fetchStudents","methods","response","get","params","status","error","console","searchStudents","saveToExcel","ws","utils","json_to_sheet","wb","book_new","book_append_sheet","writeFile","generateSheet"],"sources":["D:\\New folder\\absen-remaja\\frontend\\src\\components\\Students.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n      <div class=\"header\">\r\n          <h3>Students</h3>\r\n          <div class=\"filter-bar\">\r\n              <div class=\"filter-item\">\r\n                  <label>Name</label>\r\n                  <input type=\"text\" v-model=\"searchName\" placeholder=\"Enter name\">\r\n              </div>\r\n              <div class=\"filter-item\">\r\n                  <label>Status</label>\r\n                  <select v-model=\"filterStatus\" @change=\"filterData\">\r\n                      <option value=\"\">All</option>\r\n                      <option value=\"active\">Active</option>\r\n                      <option value=\"inactive\">Inactive</option>\r\n                  </select>\r\n              </div>\r\n              <div class=\"filter-item\">\r\n                  <button @click=\"searchStudents\">Search</button>\r\n                  <button @click=\"generateSheet\">Generate Sheet</button>\r\n              </div>\r\n          </div>\r\n      </div>\r\n\r\n      <div class=\"table-container\">\r\n          <table class=\"table\">\r\n              <thead>\r\n                  <tr>\r\n                      <th>Name</th>\r\n                      <th>ID</th>\r\n                      <th>Status</th>\r\n                  </tr>\r\n              </thead>\r\n              <tbody>\r\n                  <tr v-for=\"(student, index) in students\" :key=\"index\">\r\n                      <td>{{ student.name }}</td>\r\n                      <td>{{ student.id }}</td>\r\n                      <td>{{ student.status }}</td>\r\n                  </tr>\r\n              </tbody>\r\n          </table>\r\n      </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as XLSX from 'xlsx';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'Students',\r\n  data() {\r\n      return {\r\n          students: [],\r\n          searchName: '',\r\n          filterStatus: '',\r\n      };\r\n  },\r\n  mounted() {\r\n      this.fetchStudents();\r\n  },\r\n  methods: {\r\n      async fetchStudents() {\r\n          try {\r\n              const response = await axios.get('/api/students', {\r\n                  params: {\r\n                      name: this.searchName,\r\n                      status: this.filterStatus,\r\n                  }\r\n              });\r\n              this.students = response.data;\r\n          } catch (error) {\r\n              console.error('Error fetching students:', error);\r\n          }\r\n      },\r\n      searchStudents() {\r\n          this.fetchStudents();\r\n      },\r\n      saveToExcel(data) {\r\n          const ws = XLSX.utils.json_to_sheet(data);\r\n          const wb = XLSX.utils.book_new();\r\n          XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\r\n          XLSX.writeFile(wb, 'students-data.xlsx');\r\n      },\r\n      generateSheet() {\r\n          this.saveToExcel(this.students);\r\n      },\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  padding: 20px;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  margin: 20px auto;\r\n  max-width: 1200px;\r\n  font-family: Arial, sans-serif;\r\n}\r\n\r\n.header {\r\n  margin-bottom: 20px;\r\n}\r\n\r\nh3 {\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n  color: #333;\r\n}\r\n\r\n.filter-bar {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 15px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.filter-item {\r\n  flex: 1;\r\n  min-width: 200px;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.filter-item label {\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n  color: #555;\r\n}\r\n\r\n.filter-item input,\r\n.filter-item select {\r\n  padding: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  color: #333;\r\n}\r\n\r\n.filter-item input:focus,\r\n.filter-item select:focus {\r\n  border-color: #007bff;\r\n  outline: none;\r\n}\r\n\r\n.filter-item button {\r\n  padding: 10px 15px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: #007bff;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  margin-top: 5px;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.filter-item button:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.table-container {\r\n  overflow-x: auto;\r\n}\r\n\r\n.table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  font-size: 14px;\r\n  color: #333;\r\n}\r\n\r\n.table th,\r\n.table td {\r\n  padding: 12px 15px;\r\n  border: 1px solid #ddd;\r\n}\r\n\r\n.table th {\r\n  background-color: #f4f4f4;\r\n  font-weight: bold;\r\n  text-align: left;\r\n}\r\n\r\n.table tbody tr:nth-child(even) {\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.table tbody tr:hover {\r\n  background-color: #f1f1f1;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .filter-bar {\r\n      flex-direction: column;\r\n  }\r\n\r\n  .filter-item {\r\n      width: 100%;\r\n  }\r\n}\r\n</style>"],"mappings":"AA8CA,OAAO,KAAKA,IAAG,MAAO,MAAM;AAC5B,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,EAAE;MACdC,YAAY,EAAE;IAClB,CAAC;EACL,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,aAAa,CAAC,CAAC;EACxB,CAAC;EACDC,OAAO,EAAE;IACL,MAAMD,aAAaA,CAAA,EAAG;MAClB,IAAI;QACA,MAAME,QAAO,GAAI,MAAMT,KAAK,CAACU,GAAG,CAAC,eAAe,EAAE;UAC9CC,MAAM,EAAE;YACJV,IAAI,EAAE,IAAI,CAACG,UAAU;YACrBQ,MAAM,EAAE,IAAI,CAACP;UACjB;QACJ,CAAC,CAAC;QACF,IAAI,CAACF,QAAO,GAAIM,QAAQ,CAACP,IAAI;MACjC,EAAE,OAAOW,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD;IACJ,CAAC;IACDE,cAAcA,CAAA,EAAG;MACb,IAAI,CAACR,aAAa,CAAC,CAAC;IACxB,CAAC;IACDS,WAAWA,CAACd,IAAI,EAAE;MACd,MAAMe,EAAC,GAAIlB,IAAI,CAACmB,KAAK,CAACC,aAAa,CAACjB,IAAI,CAAC;MACzC,MAAMkB,EAAC,GAAIrB,IAAI,CAACmB,KAAK,CAACG,QAAQ,CAAC,CAAC;MAChCtB,IAAI,CAACmB,KAAK,CAACI,iBAAiB,CAACF,EAAE,EAAEH,EAAE,EAAE,QAAQ,CAAC;MAC9ClB,IAAI,CAACwB,SAAS,CAACH,EAAE,EAAE,oBAAoB,CAAC;IAC5C,CAAC;IACDI,aAAaA,CAAA,EAAG;MACZ,IAAI,CAACR,WAAW,CAAC,IAAI,CAACb,QAAQ,CAAC;IACnC;EACJ;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}