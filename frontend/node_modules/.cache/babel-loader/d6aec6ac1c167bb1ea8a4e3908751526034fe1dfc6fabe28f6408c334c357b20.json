{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'StudentsList',\n  data() {\n    return {\n      students: [],\n      studentId: '',\n      name: '',\n      birth: '',\n      phone: '',\n      gender: '',\n      class: '',\n      email: '',\n      school: '',\n      birth_place: '',\n      no_telp_ortu: '',\n      daerah: '',\n      kecamatan: '',\n      foto: 'nanana',\n      status: '',\n      address: '',\n      showEditModal: false,\n      editedStudent: {\n        nama: '',\n        email: '',\n        no_telp: '',\n        gender: '',\n        hobi: '',\n        sekolah: '',\n        tgl_lahir: '',\n        temp_lahir: '',\n        no_telp_ortu: '',\n        kelas: null,\n        daerah: '',\n        kecamatan: '',\n        alamat: '',\n        foto: 'nanana',\n        status: ''\n      }\n    };\n  },\n  created() {\n    this.fetchStudents();\n  },\n  methods: {\n    async fetchStudents() {\n      try {\n        const response = await axios.get('absen/all-students');\n        console.log(response);\n        this.students = response.data;\n      } catch (error) {\n        console.error('Error fetching absents:', error);\n      }\n    },\n    formatDate(dateString) {\n      const date = new Date(dateString);\n      const day = date.getDate().toString().padStart(2, '0');\n      const month = (date.getMonth() + 1).toString().padStart(2, '0');\n      const year = date.getFullYear();\n      return `${day}-${month}-${year}`;\n    },\n    closeEditModal() {\n      this.showEditModal = false;\n    },\n    confirmUpdateAcademicYear() {\n      if (confirm(\"Are you sure you want to update the academic year? This action cannot be undone.\")) {\n        this.updateAcademicYear();\n      }\n    },\n    updateAcademicYear() {\n      axios.post('absen/academic-year').then(response => {\n        if (response.data.status === 'success') {\n          alert(\"Academic year updated successfully.\");\n        } else {\n          alert(\"Failed to update academic year.\");\n        }\n      }).catch(error => {\n        console.error(\"Error updating academic year:\", error);\n        alert(\"An error occurred while updating the academic year.\");\n      });\n    },\n    editStudent(student) {\n      this.editedStudent = {\n        ...student\n      };\n      this.showEditModal = true;\n    },\n    submitEditForm() {\n      axios.post('absen/edit-data-jemaat', this.editedStudent).then(() => {\n        const updatedStudentIndex = this.students.findIndex(student => student.id_jemaat === this.editedStudent.id_jemaat);\n        if (updatedStudentIndex !== -1) {\n          this.students[updatedStudentIndex] = {\n            ...this.editedStudent\n          };\n        }\n        this.showEditModal = false;\n        this.editedStudent = {\n          nama: '',\n          email: '',\n          no_telp: '',\n          gender: '',\n          hobi: '',\n          sekolah: '',\n          tgl_lahir: '',\n          temp_lahir: '',\n          no_telp_ortu: '',\n          kelas: '',\n          daerah: '',\n          kecamatan: '',\n          alamat: '',\n          foto: 'nanana',\n          status: ''\n        };\n      }).catch(error => {\n        console.error('Error updating student data:', error);\n      });\n    },\n    deleteStudent(studentId) {\n      axios.delete(`absen/delete-jemaat?id_jemaat=${studentId}`).then(() => {\n        this.students = this.students.filter(student => student.id_jemaat !== studentId);\n      }).catch(error => {\n        console.error('Error deleting student:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","students","studentId","birth","phone","gender","class","email","school","birth_place","no_telp_ortu","daerah","kecamatan","foto","status","address","showEditModal","editedStudent","nama","no_telp","hobi","sekolah","tgl_lahir","temp_lahir","kelas","alamat","created","fetchStudents","methods","response","get","console","log","error","formatDate","dateString","date","Date","day","getDate","toString","padStart","month","getMonth","year","getFullYear","closeEditModal","confirmUpdateAcademicYear","confirm","updateAcademicYear","post","then","alert","catch","editStudent","student","submitEditForm","updatedStudentIndex","findIndex","id_jemaat","deleteStudent","delete","filter"],"sources":["D:\\New folder\\absen-remaja\\frontend\\src\\components\\Students.vue"],"sourcesContent":["<!-- <template>\r\n  <div class=\"header-attendance-container\">\r\n    <div class=\"attend\">\r\n      <h3>Students</h3>\r\n\r\n      <div class=\"table-container-attendance\">\r\n        <table class=\"table-sticky\">\r\n          <thead style=\"position: sticky; top: 0; background: #ccc;\">\r\n            <tr>\r\n              <th scope=\"col\">Student Name</th>\r\n              <th scope=\"col\">Student ID</th>\r\n              <th scope=\"col\">Date/Time</th>\r\n              <th scope=\"col\">Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"(absent, i) in absents\" :key=\"i\">\r\n              <td>{{ absent.nama }}</td>\r\n              <td>{{ absent.id_jemaat }}</td>\r\n              <td>{{ absent.waktu_absen }}</td>\r\n              <td>{{ absent.status }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'StudentAttendance',\r\n  data() {\r\n    return {\r\n      absents: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchAbsents();\r\n  },\r\n  methods: {\r\n    async fetchAbsents() {\r\n      try {\r\n        const response = await axios.get('absen/filter-absent-data');\r\n        this.absents = response.data;\r\n      } catch (error) {\r\n        console.error('Error fetching absents:', error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.header-attendance-container {\r\n  padding: 20px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 10px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  margin: auto;\r\n  min-width: 80%;\r\n}\r\n\r\n.attend {\r\n  margin: 0 auto;\r\n}\r\n\r\n.table-container-attendance {\r\n  max-height: 60vh; /* Set a fixed height */\r\n  overflow-y: auto; /* Enable vertical scrolling */\r\n}\r\n\r\n.table-sticky {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\n.table-sticky th,\r\n.table-sticky td {\r\n  padding: 12px 15px;\r\n  border: 1px solid #ddd;\r\n  text-align: left;\r\n}\r\n\r\n.table-sticky th {\r\n  background-color: #f4f4f4;\r\n}\r\n\r\n.table-sticky tbody tr:nth-child(even) {\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.table-sticky tbody tr:hover {\r\n  background-color: #f1f1f1;\r\n}\r\n</style> -->\r\n\r\n<!-- <template>\r\n    <div class=\"container-fluid\">\r\n        <div class=\"attend\">\r\n            <h3>Attendance</h3>\r\n\r\n            <div class=\"table-container\">\r\n                <div class=\"table-responsive\">\r\n                    <table class=\"table table-hover table-sticky\">\r\n                        <thead style=\"position: sticky;top:0;background: #ccc;\">\r\n                            <tr>\r\n                                <th scope=\"col\">Student Name</th>\r\n                                <th scope=\"col\">Birthdate</th>\r\n                                <th scope=\"col\">Class</th>\r\n                                <th scope=\"col\">Phone</th>\r\n                                <th scope=\"col\">Gender</th>\r\n                                <th scope=\"col\">Status</th>\r\n                                <th scope=\"col\">Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr v-for=\"(student, index) in students\" :key=\"index\">\r\n                                <td>{{ student.nama }}</td>\r\n                                <td>{{ formatDate(student.tgl_lahir) }}</td>\r\n                                <td>{{ student.kelas }}</td>\r\n                                <td>{{ student.no_telp }}</td>\r\n                                <td>{{ student.gender }}</td>\r\n                                <td>{{ student.status }}</td>\r\n                                <td>\r\n                                    <button @click=\"editStudent(student)\" class=\"btn btn-primary\">\r\n                                        <i class=\"bi bi-pencil-square\"></i>\r\n                                    </button>\r\n                                    <button @click=\"deleteStudent(student.id_jemaat)\" class=\"btn btn-danger\">\r\n                                        <i class=\"bi bi-trash\"></i>\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <div v-if=\"showEditModal\" class=\"modalform\">\r\n                    <div class=\"modal-content-section\">\r\n                        <span class=\"close\" @click=\"closeEditModal\">&times;</span>\r\n                        <h2>Edit Student</h2>\r\n\r\n\r\n                        <form @submit.prevent=\"submitEditForm\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"edit-name\">Name:</label>\r\n                                <input type=\"text\" id=\"edit-name\" v-model=\"editedStudent.nama\" class=\"form-control\"\r\n                                    placeholder=\"Enter name\">\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"edit-birth\">Date of Birth:</label>\r\n                                <input type=\"datetime-local\" id=\"edit-birth\" v-model=\"editedStudent.tgl_lahir\"\r\n                                    class=\"form-control\" placeholder=\"Enter date of birth\">\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"edit-email\">Email:</label>\r\n                                <input type=\"email\" id=\"email\" v-model=\"editedStudent.email\" class=\"form-control\"\r\n                                    placeholder=\"Enter email\">\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"edit-alamat\">alamat</label>\r\n                                <input type=\"text\" id=\"alamat\" v-model=\"editedStudent.alamat\" class=\"form-control\"\r\n                                    placeholder=\"Enter alamat\">\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"edit-kelas\">kelas</label>\r\n                                <input type=\"number\" id=\"kelas\" v-model=\"editedStudent.kelas\" class=\"form-control\"\r\n                                    placeholder=\"Enter kelas\">\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"edit-notelp\">nomor telpon</label>\r\n                                    <input type=\"number\" id=\"notelp\" v-model=\"editedStudent.no_telp\" class=\"form-control\"\r\n                                        placeholder=\"Enter nomor telpon\">\r\n                                </div>\r\n                            <button type=\"submit\" class=\"btn btn-success\">Save</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"update-academic-year\" style=\"margin-top: 100px;\">\r\n            <button @click=\"confirmUpdateAcademicYear\" class=\"btn btn-warning\">\r\n                Update Academic Year\r\n            </button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n    name: 'StudentsList',\r\n    data() {\r\n        return {\r\n            students: [],\r\n            studentId: '',\r\n            name: '',\r\n            birth: '',\r\n            phone: '',\r\n            gender: '',\r\n            class: '',\r\n            email: '',\r\n            school: '',\r\n            birth_place: '',\r\n            no_telp_ortu: '',\r\n            daerah: '',\r\n            kecamatan: '',\r\n            foto: 'nanana',\r\n            status: '',\r\n            address: '',\r\n            showEditModal: false,\r\n            editedStudent: {\r\n                nama: '',\r\n                email: '',\r\n                no_telp: '',\r\n                gender: '',\r\n                hobi: '',\r\n                sekolah: '',\r\n                tgl_lahir: '',\r\n                temp_lahir: '',\r\n                no_telp_ortu: '',\r\n                kelas: null,\r\n                daerah: '',\r\n                kecamatan: '',\r\n                alamat: '',\r\n                foto: 'nanana',\r\n                status: ''\r\n            },\r\n        };\r\n    },\r\n    created() {\r\n        this.fetchStudents();\r\n    },\r\n    methods: {\r\n        async fetchStudents() {\r\n            try {\r\n                const response = await axios.get('absen/all-students', {\r\n                    params: {\r\n                        id_jemaat: this.studentId,\r\n                        nama: this.name,\r\n                        tgl_lahir: this.birth,\r\n                        kelas: this.kelas,\r\n                        no_telp: this.no_telp,\r\n                        gender: this.gender,\r\n                        email: this.email,\r\n                        sekolah: this.school,\r\n                        temp_lahir: this.birth_place,\r\n                        no_telp_ortu: this.no_telp_ortu,\r\n                        daerah: this.daerah,\r\n                        kecamatan: this.kecamatan,\r\n                        alamat: this.address,\r\n                        status: this.status,\r\n                        foto: this.foto\r\n                    }\r\n                });\r\n                console.log(response)\r\n                this.students = response.data;\r\n            } catch (error) {\r\n                console.error('Error fetching absents:', error);\r\n            }\r\n        },\r\n\r\n        formatDate(dateString) {\r\n            const date = new Date(dateString);\r\n            const day = date.getDate().toString().padStart(2, '0');\r\n            const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n            const year = date.getFullYear();\r\n            return `${day}-${month}-${year}`;\r\n        },\r\n        closeEditModal() {\r\n            // Close edit modal\r\n            this.showEditModal = false;\r\n        },\r\n        confirmUpdateAcademicYear() {\r\n            if (confirm(\"Are you sure you want to update the academic year? This action cannot be undone.\")) {\r\n                this.updateAcademicYear();\r\n            }\r\n        },\r\n        updateAcademicYear() {\r\n            axios.post('absen/academic-year')\r\n                .then(response => {\r\n                    if (response.data.status === 'success') {\r\n                        alert(\"Academic year updated successfully.\");\r\n                        // Optionally refresh the students list or other relevant data\r\n                    } else {\r\n                        alert(\"Failed to update academic year.\");\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.error(\"Error updating academic year:\", error);\r\n                    alert(\"An error occurred while updating the academic year.\");\r\n                });\r\n        },\r\n        editStudent(student) {\r\n            // Set edited student data and show edit modal\r\n            console.log('edit student msuk');\r\n            console.log(student.id_jemaat);\r\n            console.log('Editing student:', student);\r\n            this.editedStudent = {\r\n                id_jemaat: student.id_jemaat,\r\n                nama: student.nama,\r\n                email: student.email,\r\n                no_telp: student.no_telp,\r\n                gender: student.gender,\r\n                hobi: student.hobi,\r\n                sekolah: student.sekolah,\r\n                tgl_lahir: student.tgl_lahir,\r\n                temp_lahir: student.temp_lahir,\r\n                no_telp_ortu: student.no_telp_ortu,\r\n                kelas: student.kelas,\r\n                daerah: student.daerah,\r\n                kecamatan: student.kecamatan,\r\n                alamat: student.alamat,\r\n                foto: student.foto,\r\n                status: student.status\r\n            };\r\n            this.showEditModal = true;\r\n            console.log(this.showEditModal);\r\n        },\r\n        submitEditForm() {\r\n            // Send a request to the server to update the student data\r\n            axios.post('absen/edit-data-jemaat', this.editedStudent)\r\n                .then(() => {\r\n                    // Update the student data in the UI\r\n                    const updatedStudentIndex = this.students.findIndex(student => student.id_jemaat === this.editedStudent.id_jemaat);\r\n                    if (updatedStudentIndex !== -1) {\r\n                        this.students[updatedStudentIndex] = { ...this.editedStudent };\r\n                    }\r\n                    // Close the edit modal\r\n                    this.showEditModal = false;\r\n                    // Reset the edited student data\r\n                    this.editedStudent = {\r\n                        nama: '',\r\n                        email: '',\r\n                        no_telp: '',\r\n                        gender: '',\r\n                        hobi: '',\r\n                        sekolah: '',\r\n                        tgl_lahir: '',\r\n                        temp_lahir: '',\r\n                        no_telp_ortu: '',\r\n                        kelas: '',\r\n                        daerah: '',\r\n                        kecamatan: '',\r\n                        alamat: '',\r\n                        foto: 'nanana',\r\n                        status: ''\r\n                    };\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error updating student data:', error);\r\n                    // Optionally, display an error message to the user\r\n                });\r\n        }, deleteStudent(studentId) {\r\n            // Send a DELETE request to delete the student by id_jemaat\r\n            axios.delete(`absen/delete-jemaat?id_jemaat=${studentId}`)\r\n                .then(() => {\r\n                    // If deletion is successful, remove the student from the UI\r\n                    this.students = this.students.filter(student => student.id_jemaat !== studentId);\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error deleting student:', error);\r\n                    // Optionally, display an error message to the user\r\n                });\r\n        }\r\n    },\r\n};\r\n</script>\r\n\r\n<style>\r\n.modalform {\r\n    display: block !important;\r\n    /* Force modal to be visible */\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    /* Semi-transparent background */\r\n    z-index: 1000;\r\n    /* Ensure modal appears above other content */\r\n}\r\n\r\n.modal-content-section {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    background-color: #fefefe;\r\n    padding: 20px;\r\n}\r\n\r\n/* Close button styles */\r\n.close {\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 10px;\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n    color: #aaa;\r\n}\r\n\r\n.close:hover,\r\n.close:focus {\r\n    color: #000;\r\n}\r\n\r\n/* Form input styles */\r\nform label {\r\n    display: block;\r\n    margin-bottom: 5px;\r\n}\r\n\r\nform input[type=\"text\"] {\r\n    width: 100%;\r\n    padding: 8px;\r\n    margin-bottom: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n}\r\n\r\n/* Submit button styles */\r\nform button {\r\n    padding: 10px 20px;\r\n    background-color: #007bff;\r\n    color: #fff;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n}\r\n\r\nform button:hover {\r\n    background-color: #0056b3;\r\n}\r\n\r\n/* Add your styles here */\r\n</style> -->\r\n<template>\r\n    <div class=\"container-fluid\">\r\n      <div class=\"attend\">\r\n        <h3>Attendance</h3>\r\n  \r\n        <div class=\"table-container\">\r\n          <div class=\"table-responsive\">\r\n            <table class=\"table table-hover table-sticky\">\r\n              <thead style=\"position: sticky; top: 0; background: #ccc;\">\r\n                <tr>\r\n                  <th scope=\"col\">Student Name</th>\r\n                  <th scope=\"col\">Birthdate</th>\r\n                  <th scope=\"col\">Class</th>\r\n                  <th scope=\"col\">Phone</th>\r\n                  <th scope=\"col\">Gender</th>\r\n                  <th scope=\"col\">Status</th>\r\n                  <th scope=\"col\">Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-for=\"(student, index) in students\" :key=\"index\">\r\n                  <td>{{ student.nama }}</td>\r\n                  <td>{{ formatDate(student.tgl_lahir) }}</td>\r\n                  <td>{{ student.kelas }}</td>\r\n                  <td>{{ student.no_telp }}</td>\r\n                  <td>{{ student.gender }}</td>\r\n                  <td>{{ student.status }}</td>\r\n                  <td>\r\n                    <button @click=\"editStudent(student)\" class=\"btn btn-primary\">\r\n                      <i class=\"bi bi-pencil-square\"></i>\r\n                    </button>\r\n                    <button @click=\"deleteStudent(student.id_jemaat)\" class=\"btn btn-danger\">\r\n                      <i class=\"bi bi-trash\"></i>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n  \r\n        <div v-if=\"showEditModal\" class=\"modalform\">\r\n          <div class=\"modal-content-section\">\r\n            <span class=\"close\" @click=\"closeEditModal\">&times;</span>\r\n            <h2>Edit Student</h2>\r\n  \r\n            <form @submit.prevent=\"submitEditForm\">\r\n              <div class=\"form-group\">\r\n                <label for=\"edit-name\">Name:</label>\r\n                <input type=\"text\" id=\"edit-name\" v-model=\"editedStudent.nama\" class=\"form-control\" placeholder=\"Enter name\">\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"edit-birth\">Date of Birth:</label>\r\n                <input type=\"datetime-local\" id=\"edit-birth\" v-model=\"editedStudent.tgl_lahir\" class=\"form-control\" placeholder=\"Enter date of birth\">\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"edit-email\">Email:</label>\r\n                <input type=\"email\" id=\"edit-email\" v-model=\"editedStudent.email\" class=\"form-control\" placeholder=\"Enter email\">\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"edit-alamat\">Alamat:</label>\r\n                <input type=\"text\" id=\"edit-alamat\" v-model=\"editedStudent.alamat\" class=\"form-control\" placeholder=\"Enter alamat\">\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"edit-kelas\">Kelas:</label>\r\n                <input type=\"number\" id=\"edit-kelas\" v-model=\"editedStudent.kelas\" class=\"form-control\" placeholder=\"Enter kelas\">\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"edit-notelp\">Nomor Telpon:</label>\r\n                <input type=\"number\" id=\"edit-notelp\" v-model=\"editedStudent.no_telp\" class=\"form-control\" placeholder=\"Enter nomor telpon\">\r\n              </div>\r\n              <button type=\"submit\" class=\"btn btn-success\">Save</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"update-academic-year\">\r\n        <button @click=\"confirmUpdateAcademicYear\" class=\"btn btn-warning\">\r\n          Update Academic Year\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    name: 'StudentsList',\r\n    data() {\r\n      return {\r\n        students: [],\r\n        studentId: '',\r\n        name: '',\r\n        birth: '',\r\n        phone: '',\r\n        gender: '',\r\n        class: '',\r\n        email: '',\r\n        school: '',\r\n        birth_place: '',\r\n        no_telp_ortu: '',\r\n        daerah: '',\r\n        kecamatan: '',\r\n        foto: 'nanana',\r\n        status: '',\r\n        address: '',\r\n        showEditModal: false,\r\n        editedStudent: {\r\n          nama: '',\r\n          email: '',\r\n          no_telp: '',\r\n          gender: '',\r\n          hobi: '',\r\n          sekolah: '',\r\n          tgl_lahir: '',\r\n          temp_lahir: '',\r\n          no_telp_ortu: '',\r\n          kelas: null,\r\n          daerah: '',\r\n          kecamatan: '',\r\n          alamat: '',\r\n          foto: 'nanana',\r\n          status: ''\r\n        }\r\n      };\r\n    },\r\n    created() {\r\n      this.fetchStudents();\r\n    },\r\n    methods: {\r\n      async fetchStudents() {\r\n        try {\r\n          const response = await axios.get('absen/all-students');\r\n          console.log(response);\r\n          this.students = response.data;\r\n        } catch (error) {\r\n          console.error('Error fetching absents:', error);\r\n        }\r\n      },\r\n      formatDate(dateString) {\r\n        const date = new Date(dateString);\r\n        const day = date.getDate().toString().padStart(2, '0');\r\n        const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n        const year = date.getFullYear();\r\n        return `${day}-${month}-${year}`;\r\n      },\r\n      closeEditModal() {\r\n        this.showEditModal = false;\r\n      },\r\n      confirmUpdateAcademicYear() {\r\n        if (confirm(\"Are you sure you want to update the academic year? This action cannot be undone.\")) {\r\n          this.updateAcademicYear();\r\n        }\r\n      },\r\n      updateAcademicYear() {\r\n        axios.post('absen/academic-year')\r\n          .then(response => {\r\n            if (response.data.status === 'success') {\r\n              alert(\"Academic year updated successfully.\");\r\n            } else {\r\n              alert(\"Failed to update academic year.\");\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error(\"Error updating academic year:\", error);\r\n            alert(\"An error occurred while updating the academic year.\");\r\n          });\r\n      },\r\n      editStudent(student) {\r\n        this.editedStudent = { ...student };\r\n        this.showEditModal = true;\r\n      },\r\n      submitEditForm() {\r\n        axios.post('absen/edit-data-jemaat', this.editedStudent)\r\n          .then(() => {\r\n            const updatedStudentIndex = this.students.findIndex(student => student.id_jemaat === this.editedStudent.id_jemaat);\r\n            if (updatedStudentIndex !== -1) {\r\n              this.students[updatedStudentIndex] = { ...this.editedStudent };\r\n            }\r\n            this.showEditModal = false;\r\n            this.editedStudent = {\r\n              nama: '',\r\n              email: '',\r\n              no_telp: '',\r\n              gender: '',\r\n              hobi: '',\r\n              sekolah: '',\r\n              tgl_lahir: '',\r\n              temp_lahir: '',\r\n              no_telp_ortu: '',\r\n              kelas: '',\r\n              daerah: '',\r\n              kecamatan: '',\r\n              alamat: '',\r\n              foto: 'nanana',\r\n              status: ''\r\n            };\r\n          })\r\n          .catch(error => {\r\n            console.error('Error updating student data:', error);\r\n          });\r\n      },\r\n      deleteStudent(studentId) {\r\n        axios.delete(`absen/delete-jemaat?id_jemaat=${studentId}`)\r\n          .then(() => {\r\n            this.students = this.students.filter(student => student.id_jemaat !== studentId);\r\n          })\r\n          .catch(error => {\r\n            console.error('Error deleting student:', error);\r\n          });\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .container-fluid {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 10px;\r\n  }\r\n  \r\n  .attend {\r\n    width: 100%;\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n  }\r\n  \r\n  .table-container {\r\n    width: 100%;\r\n    overflow-x: auto;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .table-sticky thead {\r\n    background: #ccc;\r\n    position: sticky;\r\n    top: 0;\r\n  }\r\n  \r\n  .update-academic-year {\r\n    margin-top: 20px;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n  \r\n  .modalform {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    z-index: 1000;\r\n  }\r\n  \r\n  .modal-content-section {\r\n    background-color: #fefefe;\r\n    padding: 20px;\r\n    border-radius: 8px;\r\n    max-width: 500px;\r\n    width: 100%;\r\n    margin: 0 10px;\r\n  }\r\n  \r\n  .close {\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 10px;\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n    color: #aaa;\r\n  }\r\n  \r\n  .close:hover,\r\n  .close:focus {\r\n    color: #000;\r\n  }\r\n  \r\n  form label {\r\n    display: block;\r\n    margin-bottom: 5px;\r\n  }\r\n  \r\nform input[type=\"text\"],\r\nform input[type=\"datetime-local\"],\r\nform input[type=\"email\"],\r\nform input[type=\"number\"] {\r\n  width: 100%;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n@media (max-width: 600px) {\r\n  .table-responsive {\r\n    overflow-x: auto;\r\n  }\r\n\r\n  .modal-content-section {\r\n    width: 90%;\r\n  }\r\n\r\n  .table th, .table td {\r\n    padding: 8px;\r\n    font-size: 12px;\r\n  }\r\n\r\n  .table-container {\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  .update-academic-year {\r\n    margin-top: 15px;\r\n  }\r\n\r\n  h3 {\r\n    font-size: 1.5em;\r\n  }\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}