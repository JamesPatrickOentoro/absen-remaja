{"ast":null,"code":"import { createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _createCommentVNode(\" <nav class=\\\"navbar navbar-expand-sm bg-body-tertiary\\\" id=\\\"header-nav\\\"\\r\\n        style=\\\"box-shadow: rgba(0, 0, 0, .06) 0 0 6px 2px;\\\">\\r\\n        <div class=\\\"container-fluid\\\">\\r\\n            <a class=\\\"navbar-brand\\\">Dashboard</a>\\r\\n            <form class=\\\"d-flex\\\" role=\\\"search\\\">\\r\\n                <div>\\r\\n                    <button @click.prevent=\\\"showAdminLoginForm\\\" class=\\\"btn btn-outline-success\\\" type=\\\"submit\\\">Admin\\r\\n                        Login</button>\\r\\n                    <div v-if=\\\"showForm\\\">\\r\\n                        <div class=\\\"modal\\\">\\r\\n                            <div class=\\\"modal-content\\\">\\r\\n                                <span class=\\\"close\\\" @click=\\\"closeAdminLoginForm\\\">&times;</span>\\r\\n                                <input type=\\\"text\\\" v-model=\\\"adminUsername\\\" placeholder=\\\"Username\\\">\\r\\n                                <input type=\\\"password\\\" v-model=\\\"adminPass\\\" placeholder=\\\"Password\\\">\\r\\n                                <button @click.prevent=\\\"adminLogin\\\">Login</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </nav> \");\n}","map":{"version":3,"names":["_createCommentVNode"],"sources":["D:\\New folder\\absen-remaja\\frontend\\src\\components\\HeaderBefore.vue"],"sourcesContent":["<template>\r\n    <!-- <nav class=\"navbar navbar-expand-sm bg-body-tertiary\" id=\"header-nav\"\r\n        style=\"box-shadow: rgba(0, 0, 0, .06) 0 0 6px 2px;\">\r\n        <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\">Dashboard</a>\r\n            <form class=\"d-flex\" role=\"search\">\r\n                <div>\r\n                    <button @click.prevent=\"showAdminLoginForm\" class=\"btn btn-outline-success\" type=\"submit\">Admin\r\n                        Login</button>\r\n                    <div v-if=\"showForm\">\r\n                        <div class=\"modal\">\r\n                            <div class=\"modal-content\">\r\n                                <span class=\"close\" @click=\"closeAdminLoginForm\">&times;</span>\r\n                                <input type=\"text\" v-model=\"adminUsername\" placeholder=\"Username\">\r\n                                <input type=\"password\" v-model=\"adminPass\" placeholder=\"Password\">\r\n                                <button @click.prevent=\"adminLogin\">Login</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </nav> -->\r\n\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from 'axios'\r\nexport default {\r\n    name: 'HeaderBefore',\r\n    data() {\r\n        return {\r\n            showForm: false,\r\n            adminUsername: \"\",\r\n            adminPass: \"\",\r\n            error: false\r\n        };\r\n    },\r\n    methods: {\r\n        showAdminLoginForm() {\r\n            this.showForm = true;\r\n        },\r\n        closeAdminLoginForm() {\r\n            this.showForm = false;\r\n        },\r\n        adminLogin() {\r\n            const data = {\r\n                nama_admin: this.adminUsername,\r\n                password: this.adminPass\r\n            };\r\n            axios.post('http://127.0.0.1:5000/admin/login', data)\r\n                .then(response => {\r\n                    if (response.data.status === 'success') {\r\n                        this.$router.push('/admin-view');\r\n                    } else {\r\n                        console.error('Login gagal');\r\n                        this.error = true;\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.error('ada error', error);\r\n                });\r\n        }\r\n    }\r\n};\r\n\r\n</script>\r\n<style scoped>\r\n.modal {\r\n  display: block; /* Menampilkan pop-up */\r\n  position: fixed; /* Tetap di layar */\r\n  z-index: 1; /* Di atas konten lain */\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto; /* Memungkinkan scrolling jika konten terlalu panjang */\r\n  background-color: rgba(0,0,0,0.4); /* Latar belakang hitam dengan opacity */\r\n}\r\n\r\n.modal-content {\r\n  background-color: #fefefe;\r\n  margin: 15% auto; /* Posisi tengah di atas */\r\n  padding: 20px;\r\n  border: 1px solid #888;\r\n  width: 30%; /* Lebar pop-up */\r\n}\r\n.close {\r\n    color: #aaa;\r\n    float: right;\r\n    font-size: 28px;\r\n    font-weight: bold;\r\n}\r\n\r\n.close:hover,\r\n.close:focus {\r\n    color: black;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n}\r\n</style>"],"mappings":";;SACIA,mBAAA,qtCAqBU"},"metadata":{},"sourceType":"module","externalDependencies":[]}