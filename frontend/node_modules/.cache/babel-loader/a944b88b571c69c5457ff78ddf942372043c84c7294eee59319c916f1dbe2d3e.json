{"ast":null,"code":"import axios from 'axios';\nimport Chart from 'chart.js/auto';\nexport default {\n  data() {\n    return {\n      selectedYear: '',\n      selectedMonth: '',\n      years: ['2022', '2023', '2024'],\n      // Add years as needed\n      months: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n      chart: null,\n      chartData: {\n        labels: [],\n        datasets: [{\n          label: 'Jumlah',\n          data: [],\n          backgroundColor: 'rgba(54, 162, 235, 0.5)',\n          borderColor: 'rgba(54, 162, 235, 1)',\n          borderWidth: 1\n        }]\n      } // Variable to store the chart instance\n    };\n  },\n  mounted() {\n    // Render an empty chart on component mount\n    this.renderChart([], []);\n  },\n  methods: {\n    fetchMonthlyAbsentData() {\n      const year = this.selectedYear;\n      const monthIndex = this.selectedMonth - 1;\n      const month = (monthIndex < 9 ? '0' : '') + (monthIndex + 1).toString();\n      console.log(month);\n      console.log(year);\n      axios.post('/absen/monthly-absent', {\n        year,\n        month\n      }).then(response => {\n        console.log('Data fetched:', response.data);\n\n        // Extract jumlah and minggu lists from the response data\n        const jumlah = response.data.jumlah;\n        const minggu = response.data.minggu;\n\n        // Use jumlah and minggu as needed\n        console.log('Jumlah:', jumlah);\n        console.log('Minggu:', minggu);\n        this.renderChart(jumlah, minggu);\n      }).catch(error => {\n        console.error('Error fetching monthly absent data:', error);\n      });\n    },\n    renderChart(jumlah, minggu) {\n      // Update chart data\n      this.chartData.labels = minggu;\n      this.chartData.datasets[0].data = jumlah;\n\n      // Destroy existing chart if it exists\n      if (this.chart) {\n        this.chart.destroy();\n      }\n\n      // Create a new chart instance\n      this.chart = new Chart(document.getElementById('barChart'), {\n        type: 'bar',\n        data: this.chartData,\n        // Use updated chart data\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","Chart","data","selectedYear","selectedMonth","years","months","chart","chartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","mounted","renderChart","methods","fetchMonthlyAbsentData","year","monthIndex","month","toString","console","log","post","then","response","jumlah","minggu","catch","error","destroy","document","getElementById","type","options","scales","y","beginAtZero"],"sources":["D:\\New folder\\absen-remaja\\frontend\\src\\components\\AdminDashboard.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <select v-model=\"selectedYear\">\r\n            <option v-for=\"year in years\" :key=\"year\">{{ year }}</option>\r\n        </select>\r\n        <select v-model=\"selectedMonth\">\r\n            <option v-for=\"(month, index) in months\" :key=\"month\" :value=\"index + 1\">{{ month }}</option>\r\n        </select>\r\n        <button @click=\"fetchMonthlyAbsentData\">Fetch Monthly Absent Data</button>\r\n        <canvas id=\"barChart\" width=\"400\" height=\"400\"></canvas>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport Chart from 'chart.js/auto'; \r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            selectedYear: '',\r\n            selectedMonth: '',\r\n            years: ['2022', '2023', '2024'], // Add years as needed\r\n            months: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n            chart: null,\r\n            chartData: {\r\n                labels: [],\r\n                datasets: [{\r\n                    label: 'Jumlah',\r\n                    data: [],\r\n                    backgroundColor: 'rgba(54, 162, 235, 0.5)',\r\n                    borderColor: 'rgba(54, 162, 235, 1)',\r\n                    borderWidth: 1\r\n                }]\r\n            } // Variable to store the chart instance\r\n        };\r\n    },\r\n    mounted() {\r\n        // Render an empty chart on component mount\r\n        this.renderChart([], []);\r\n    },\r\n    methods: {\r\n        fetchMonthlyAbsentData() {\r\n            const year = this.selectedYear;\r\n            const monthIndex = this.selectedMonth - 1;\r\n            const month = (monthIndex < 9 ? '0' : '') + (monthIndex + 1).toString();\r\n            console.log(month)\r\n            console.log(year)\r\n\r\n            axios.post('/absen/monthly-absent', { year, month })\r\n                .then(response => {\r\n                    console.log('Data fetched:', response.data);\r\n\r\n                    // Extract jumlah and minggu lists from the response data\r\n                    const jumlah = response.data.jumlah;\r\n                    const minggu = response.data.minggu;\r\n\r\n\r\n                    // Use jumlah and minggu as needed\r\n                    console.log('Jumlah:', jumlah);\r\n                    console.log('Minggu:', minggu);\r\n\r\n                    this.renderChart(jumlah, minggu);\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error fetching monthly absent data:', error);\r\n                });\r\n        },\r\n        renderChart(jumlah, minggu) {\r\n            // Update chart data\r\n            this.chartData.labels = minggu;\r\n            this.chartData.datasets[0].data = jumlah;\r\n\r\n            // Destroy existing chart if it exists\r\n            if (this.chart) {\r\n                this.chart.destroy();\r\n            }\r\n\r\n            // Create a new chart instance\r\n            this.chart = new Chart(document.getElementById('barChart'), {\r\n                type: 'bar',\r\n                data: this.chartData, // Use updated chart data\r\n                options: {\r\n                    scales: {\r\n                        y: {\r\n                            beginAtZero: true\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n};\r\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}