{"ast":null,"code":"import * as XLSX from 'xlsx';\nimport axios from 'axios';\nexport default {\n  name: 'StudentAttendance',\n  props: {\n    items: {\n      type: Array,\n      required: false,\n      default: () => []\n    }\n  },\n  data() {\n    return {\n      absents: [],\n      filterName: '',\n      filterStatus: '',\n      filterDate: ''\n    };\n  },\n  mounted() {\n    this.fetchAbsents();\n  },\n  methods: {\n    async fetchAbsents() {\n      try {\n        const response = await axios.get('absen/filter-absent-data', {\n          params: {\n            status: this.filterStatus,\n            nama: this.filterName,\n            tanggal: this.filterDate\n          }\n        });\n        this.absents = response.data;\n      } catch (error) {\n        console.error('Error fetching absents:', error);\n      }\n    },\n    search() {\n      this.fetchAbsents();\n    },\n    saveToExcel(data) {\n      const ws = XLSX.utils.json_to_sheet(data);\n      const wb = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n      XLSX.writeFile(wb, 'data-absensi.xlsx');\n    },\n    generateSheet() {\n      this.saveToExcel(this.absents);\n    }\n  }\n};","map":{"version":3,"names":["XLSX","axios","name","props","items","type","Array","required","default","data","absents","filterName","filterStatus","filterDate","mounted","fetchAbsents","methods","response","get","params","status","nama","tanggal","error","console","search","saveToExcel","ws","utils","json_to_sheet","wb","book_new","book_append_sheet","writeFile","generateSheet"],"sources":["D:\\New folder\\absen-remaja\\frontend\\src\\components\\StudentAttendance.vue"],"sourcesContent":["<template>\r\n    <div class=\"header-attendance-container\">\r\n        <div class=\"attend\">\r\n            <h3>Attendance</h3>\r\n            <div class=\"attendance-filterbar\">\r\n                <div class=\"attendance-item\">\r\n                    <div class=\"attend-items\">\r\n                        <div class=\"a-item\">\r\n                            <label>Name</label>\r\n                        </div>\r\n                        <div class=\"a-item\">\r\n                            <input type=\"text\" v-model=\"filterName\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"attend-items\">\r\n                        <input class=\"button\" style=\"border-radius: 5px; border: 1px solid #ccc; padding: 5px\" type=\"date\" v-model=\"filterDate\">\r\n                    </div>\r\n                    <div class=\"attend-items\">\r\n                        <select class=\"form-select\" v-model=\"filterStatus\" @change=\"filterData\">\r\n                            <option value=\"\">All</option>\r\n                            <option value=\"active\">Active</option>\r\n                            <option value=\"inactive\">Inactive</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"attend-items\">\r\n                        <button class=\"button\" @click=\"search\">Search</button>\r\n                        <button class=\"button\" @click=\"generateSheet\">Generate Sheet</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"table-container-attendance\">\r\n                <div class=\"table-attendance\">\r\n                    <table class=\"table table-hover table-sticky\">\r\n                        <thead style=\"position: sticky; top: 0; background: #ccc;\">\r\n                            <tr>\r\n                                <th scope=\"col\">Student Name</th>\r\n                                <th scope=\"col\">Student ID</th>\r\n                                <th scope=\"col\">Date/Time</th>\r\n                                <th scope=\"col\">Status</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr v-for=\"(absent, i) in absents\" :key=\"i\">\r\n                                <td>{{ absent.nama }}</td>\r\n                                <td>{{ absent.id_jemaat }}</td>\r\n                                <td>{{ absent.waktu_absen }}</td>\r\n                                <td>{{ absent.status }}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport * as XLSX from 'xlsx';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    name: 'StudentAttendance',\r\n    props: {\r\n        items: {\r\n            type: Array,\r\n            required: false,\r\n            default: () => [],\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            absents: [],\r\n            filterName: '',\r\n            filterStatus: '',\r\n            filterDate: '',\r\n        };\r\n    },\r\n    mounted() {\r\n        this.fetchAbsents();\r\n    },\r\n    methods: {\r\n        async fetchAbsents() {\r\n            try {\r\n                const response = await axios.get('absen/filter-absent-data', {\r\n                    params: {\r\n                        status: this.filterStatus,\r\n                        nama: this.filterName,\r\n                        tanggal: this.filterDate,\r\n                    }\r\n                });\r\n                this.absents = response.data;\r\n            } catch (error) {\r\n                console.error('Error fetching absents:', error);\r\n            }\r\n        },\r\n        search() {\r\n            this.fetchAbsents();\r\n        },\r\n        saveToExcel(data) {\r\n            const ws = XLSX.utils.json_to_sheet(data);\r\n            const wb = XLSX.utils.book_new();\r\n            XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\r\n            XLSX.writeFile(wb, 'data-absensi.xlsx');\r\n        },\r\n        generateSheet() {\r\n            this.saveToExcel(this.absents);\r\n        },\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n.table-container {\r\n    height: 280px;\r\n    overflow: auto;\r\n    min-height: 10em;\r\n    max-height: 80em;\r\n}\r\n</style>\r\n"],"mappings":"AA0DA,OAAO,KAAKA,IAAG,MAAO,MAAM;AAC5B,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACXC,IAAI,EAAE,mBAAmB;EACzBC,KAAK,EAAE;IACHC,KAAK,EAAE;MACHC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE,KAAK;MACfC,OAAO,EAAEA,CAAA,KAAM;IACnB;EACJ,CAAC;EACDC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,OAAO,EAAE,EAAE;MACXC,UAAU,EAAE,EAAE;MACdC,YAAY,EAAE,EAAE;MAChBC,UAAU,EAAE;IAChB,CAAC;EACL,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,YAAY,CAAC,CAAC;EACvB,CAAC;EACDC,OAAO,EAAE;IACL,MAAMD,YAAYA,CAAA,EAAG;MACjB,IAAI;QACA,MAAME,QAAO,GAAI,MAAMhB,KAAK,CAACiB,GAAG,CAAC,0BAA0B,EAAE;UACzDC,MAAM,EAAE;YACJC,MAAM,EAAE,IAAI,CAACR,YAAY;YACzBS,IAAI,EAAE,IAAI,CAACV,UAAU;YACrBW,OAAO,EAAE,IAAI,CAACT;UAClB;QACJ,CAAC,CAAC;QACF,IAAI,CAACH,OAAM,GAAIO,QAAQ,CAACR,IAAI;MAChC,EAAE,OAAOc,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACnD;IACJ,CAAC;IACDE,MAAMA,CAAA,EAAG;MACL,IAAI,CAACV,YAAY,CAAC,CAAC;IACvB,CAAC;IACDW,WAAWA,CAACjB,IAAI,EAAE;MACd,MAAMkB,EAAC,GAAI3B,IAAI,CAAC4B,KAAK,CAACC,aAAa,CAACpB,IAAI,CAAC;MACzC,MAAMqB,EAAC,GAAI9B,IAAI,CAAC4B,KAAK,CAACG,QAAQ,CAAC,CAAC;MAChC/B,IAAI,CAAC4B,KAAK,CAACI,iBAAiB,CAACF,EAAE,EAAEH,EAAE,EAAE,QAAQ,CAAC;MAC9C3B,IAAI,CAACiC,SAAS,CAACH,EAAE,EAAE,mBAAmB,CAAC;IAC3C,CAAC;IACDI,aAAaA,CAAA,EAAG;MACZ,IAAI,CAACR,WAAW,CAAC,IAAI,CAAChB,OAAO,CAAC;IAClC;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}