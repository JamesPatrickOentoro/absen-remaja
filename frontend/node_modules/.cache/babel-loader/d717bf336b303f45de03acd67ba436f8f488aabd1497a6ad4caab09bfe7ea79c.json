{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, createElementVNode as _createElementVNode, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"card\"\n};\nconst _hoisted_2 = {\n  class: \"card-content\"\n};\nconst _hoisted_3 = [\"value\"];\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"card-chart\"\n}, [/*#__PURE__*/_createElementVNode(\"canvas\", {\n  id: \"barChart\",\n  width: \"400\",\n  height: \"300\"\n})], -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedYear = $event),\n    class: \"select\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.years, year => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: year\n    }, _toDisplayString(year), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedYear]]), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.selectedMonth = $event),\n    class: \"select\",\n    placeholder: \"\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.months, (month, index) => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: month,\n      value: index + 1\n    }, _toDisplayString(month), 9 /* TEXT, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedMonth]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.fetchMonthlyAbsentData && $options.fetchMonthlyAbsentData(...args)),\n    class: \"button\"\n  }, \"generate\")]), _hoisted_4]);\n}","map":{"version":3,"names":["class","_createElementVNode","id","width","height","_createElementBlock","_hoisted_1","_hoisted_2","$data","selectedYear","$event","_Fragment","_renderList","years","year","key","_toDisplayString","selectedMonth","placeholder","months","month","index","value","_hoisted_3","onClick","_cache","args","$options","fetchMonthlyAbsentData","_hoisted_4"],"sources":["D:\\New folder\\absen-remaja\\frontend\\src\\components\\AdminDashboard.vue"],"sourcesContent":["<template>\r\n    <div class=\"card\">\r\n        <div class=\"card-content\">\r\n            <select v-model=\"selectedYear\" class=\"select\">\r\n                <option v-for=\"year in years\" :key=\"year\">{{ year }}</option>\r\n            </select>\r\n            <select v-model=\"selectedMonth\" class=\"select\" placeholder=\"\">\r\n                <option v-for=\"(month, index) in months\" :key=\"month\" :value=\"index + 1\">{{ month }}</option>\r\n            </select>\r\n            <button @click=\"fetchMonthlyAbsentData\" class=\"button\">generate</button>\r\n        </div>\r\n        <div class=\"card-chart\">\r\n            <canvas id=\"barChart\" width=\"400\" height=\"300\"></canvas>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport Chart from 'chart.js/auto';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            selectedYear: '',\r\n            selectedMonth: '',\r\n            years: ['2022', '2023', '2024'], // Add years as needed\r\n            months: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n            chart: null,\r\n            chartData: {\r\n                type: 'bar',\r\n                labels: [],\r\n                datasets: [{\r\n                    label: 'Jumlah',\r\n                    data: [],\r\n                    // backgroundColor: 'rgba(54, 162, 235, 0.5)',\r\n                    // borderColor: 'rgba(54, 162, 235, 1)',\r\n                    // borderWidth: 1\r\n                }]\r\n            } // Variable to store the chart instance\r\n        };\r\n    },\r\n    mounted() {\r\n        // Render an empty chart on component mount\r\n        this.renderChart([], []);\r\n    },\r\n    methods: {\r\n        fetchMonthlyAbsentData() {\r\n            const year = this.selectedYear;\r\n            const monthIndex = this.selectedMonth - 1;\r\n            const month = (monthIndex < 9 ? '0' : '') + (monthIndex + 1).toString();\r\n            console.log(month)\r\n            console.log(year)\r\n\r\n            axios.post('/absen/monthly-absent', { year, month })\r\n                .then(response => {\r\n                    console.log('Data fetched:', response.data);\r\n\r\n                    // Extract jumlah and minggu lists from the response data\r\n                    const jumlah = response.data.jumlah;\r\n                    const minggu = response.data.minggu;\r\n\r\n\r\n                    // Use jumlah and minggu as needed\r\n                    console.log('Jumlah:', jumlah);\r\n                    console.log('Minggu:', minggu);\r\n\r\n                    this.renderChart(jumlah, minggu);\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error fetching monthly absent data:', error);\r\n                });\r\n        },\r\n        renderChart(jumlah, minggu) {\r\n            const formattedMinggu = minggu.map(dateString => {\r\n                const date = new Date(dateString);\r\n                const day = String(date.getDate()).padStart(2, '0');\r\n                const month = String(date.getMonth() + 1).padStart(2, '0');\r\n                const year = String(date.getFullYear()).slice(-2);\r\n                return `${day}-${month}-${year}`;\r\n            });\r\n            // Update chart data\r\n            this.chartData.labels = formattedMinggu;\r\n            this.chartData.datasets[0].data = jumlah;\r\n\r\n            // Destroy existing chart if it exists\r\n            if (this.chart) {\r\n                this.chart.destroy();\r\n            }\r\n\r\n            // Create a new chart instance\r\n            this.chart = new Chart(document.getElementById('barChart'), {\r\n                type: 'bar',\r\n                data: this.chartData, // Use updated chart data\r\n                options: {\r\n                    scales: {\r\n                        y: {\r\n                            beginAtZero: true\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n};\r\n</script>\r\n<style>\r\n.card {\r\n    border: 1px solid #ccc;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n    padding: 20px;\r\n    margin-bottom: 20px;\r\n    background-color: #fff;\r\n    overflow: hidden;\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n.card-content {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.select {\r\n    padding: 8px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    background-color: #f9f9f9;\r\n}\r\n\r\n.button {\r\n    padding: 8px 20px;\r\n    border: none;\r\n    border-radius: 4px;\r\n    background-color: #007bff;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s;\r\n}\r\n\r\n.button:hover {\r\n    background-color: #0056b3;\r\n}\r\n\r\n.card-chart {\r\n    flex-grow: 1;\r\n}\r\n</style>"],"mappings":";;EACSA,KAAK,EAAC;AAAM;;EACRA,KAAK,EAAC;AAAc;;gCASzBC,mBAAA,CAEM;EAFDD,KAAK,EAAC;AAAY,I,aACnBC,mBAAA,CAAwD;EAAhDC,EAAE,EAAC,UAAU;EAACC,KAAK,EAAC,KAAK;EAACC,MAAM,EAAC;;;uBAXjDC,mBAAA,CAaM,OAbNC,UAaM,GAZFL,mBAAA,CAQM,OARNM,UAQM,G,gBAPFN,mBAAA,CAES;+DAFQO,KAAA,CAAAC,YAAY,GAAAC,MAAA;IAAEV,KAAK,EAAC;yBACjCK,mBAAA,CAA6DM,SAAA,QAAAC,WAAA,CAAtCJ,KAAA,CAAAK,KAAK,EAAbC,IAAI;yBAAnBT,mBAAA,CAA6D;MAA9BU,GAAG,EAAED;IAAI,GAAAE,gBAAA,CAAKF,IAAI;2EADpCN,KAAA,CAAAC,YAAY,E,mBAG7BR,mBAAA,CAES;+DAFQO,KAAA,CAAAS,aAAa,GAAAP,MAAA;IAAEV,KAAK,EAAC,QAAQ;IAACkB,WAAW,EAAC;yBACvDb,mBAAA,CAA6FM,SAAA,QAAAC,WAAA,CAA5DJ,KAAA,CAAAW,MAAM,GAAvBC,KAAK,EAAEC,KAAK;yBAA5BhB,mBAAA,CAA6F;MAAnDU,GAAG,EAAEK,KAAK;MAAGE,KAAK,EAAED,KAAK;wBAASD,KAAK,wBAAAG,UAAA;2EADpEf,KAAA,CAAAS,aAAa,E,GAG9BhB,mBAAA,CAAwE;IAA/DuB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,sBAAA,IAAAD,QAAA,CAAAC,sBAAA,IAAAF,IAAA,CAAsB;IAAE1B,KAAK,EAAC;KAAS,UAAQ,E,GAEnE6B,UAEM,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}