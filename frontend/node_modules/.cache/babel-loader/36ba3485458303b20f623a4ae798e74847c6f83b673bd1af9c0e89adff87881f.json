{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container-fluid\"\n};\nconst _hoisted_2 = {\n  class: \"attend\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Attendance\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"table-container\"\n};\nconst _hoisted_5 = {\n  class: \"table-responsive\"\n};\nconst _hoisted_6 = {\n  class: \"table table-hover table-sticky\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"thead\", {\n  style: {\n    \"position\": \"sticky\",\n    \"top\": \"0\",\n    \"background\": \"#ccc\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Student Name\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Student ID\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Date/Time\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Status\")])], -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"table\", _hoisted_6, [_hoisted_7, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.students, (student, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(student.nama), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatDate(student.tgl_lahir)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(student.kelas), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(student.no_telp), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(student.gender), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","style","scope","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_Fragment","_renderList","$data","students","student","index","key","_toDisplayString","nama","$options","formatDate","tgl_lahir","kelas","no_telp","gender"],"sources":["D:\\New folder\\absen-remaja\\frontend\\src\\components\\Students.vue"],"sourcesContent":["<!-- <template>\r\n    <div>\r\n        <h2>All Students</h2>\r\n        <div class=\"table-responsive\">\r\n            <table class=\"table table-striped\">\r\n                <thead class=\"thead-dark\">\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Date of Birth</th>\r\n                        <th>Class</th>\r\n                        <th>Phone Number</th>\r\n                        <th>Gender</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr v-for=\"(student, index) in students\" :key=\"index\">\r\n                        <td>{{ student.nama }}</td>\r\n                        <td>{{ formatDate(student.tgl_lahir) }}</td>\r\n                        <td>{{ student.kelas }}</td>\r\n                        <td>{{ student.no_telp }}</td>\r\n                        <td>{{ student.gender }}</td>\r\n                        <td>\r\n                            <button @click=\"editStudent(student)\" class=\"btn btn-primary\">\r\n                                <i class=\"bi bi-pencil-square\"></i> \r\n                            </button>\r\n                            <button @click=\"deleteStudent(student.id_jemaat)\" class=\"btn btn-danger\">\r\n                                <i class=\"bi bi-trash\"></i>\r\n                            </button>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div v-if=\"showEditModal\" class=\"modalform\">\r\n            <div class=\"modal-content-section\">\r\n                <span class=\"close\" @click=\"closeEditModal\">&times;</span>\r\n                <h2>Edit Student</h2>\r\n                \r\n\r\n                <form @submit.prevent=\"submitEditForm\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"edit-name\">Name:</label>\r\n                        <input type=\"text\" id=\"edit-name\" v-model=\"editedStudent.nama\" class=\"form-control\" placeholder=\"Enter name\">\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"edit-birth\">Date of Birth:</label>\r\n                        <input type=\"text\" id=\"edit-birth\" v-model=\"editedStudent.tgl_lahir\" class=\"form-control\" placeholder=\"Enter date of birth\">\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"edit-email\">Email:</label>\r\n                        <input type=\"email\" id=\"email\" v-model=\"editedStudent.email\" class=\"form-control\" placeholder=\"Enter email\">\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"edit-hobby\">Hobby:</label>\r\n                        <input type=\"text\" id=\"hobby\" v-model=\"editedStudent.hobi\" class=\"form-control\" placeholder=\"Enter hobby\">\r\n                    </div>\r\n                    <button type=\"submit\" class=\"btn btn-success\">Save</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template> -->\r\n<template>\r\n    <div class=\"container-fluid\">\r\n        <div class=\"attend\">\r\n            <h3>Attendance</h3>\r\n\r\n            <div class=\"table-container\">\r\n                <div class=\"table-responsive\">\r\n                    <table class=\"table table-hover table-sticky\">\r\n                        <thead style=\"position: sticky;top:0;background: #ccc;\">\r\n                            <tr>\r\n                                <th scope=\"col\">Student Name</th>\r\n                                <th scope=\"col\">Student ID</th>\r\n                                <th scope=\"col\">Date/Time</th>\r\n                                <th scope=\"col\">Status</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr v-for=\"(student, index) in students\" :key=\"index\">\r\n                                <td>{{ student.nama }}</td>\r\n                                <td>{{ formatDate(student.tgl_lahir) }}</td>\r\n                                <td>{{ student.kelas }}</td>\r\n                                <td>{{ student.no_telp }}</td>\r\n                                <td>{{ student.gender }}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n    name: 'StudentsList',\r\n    data() {\r\n        return {\r\n            students: [],\r\n            studentId: '',\r\n            name: '',\r\n            birth: '',\r\n            phone: '',\r\n            gender: '',\r\n            class: '',\r\n            email: '',\r\n            school: '',\r\n            birth_place: '',\r\n            no_telp_ortu: '',\r\n            daerah: '',\r\n            kecamatan: '',\r\n            foto: 'nanana',\r\n            status: '',\r\n            address: '',\r\n            showEditModal: false,\r\n            editedStudent: {\r\n                nama: '',\r\n                email: '',\r\n                no_telp: '',\r\n                gender: '',\r\n                hobi: '',\r\n                sekolah: '',\r\n                tgl_lahir: '',\r\n                temp_lahir: '',\r\n                no_telp_ortu: '',\r\n                kelas: null,\r\n                daerah: '',\r\n                kecamatan: '',\r\n                alamat: '',\r\n                foto: 'nanana',\r\n                status: ''\r\n            },\r\n        };\r\n    },\r\n    created() {\r\n        this.fetchStudents();\r\n    },\r\n    methods: {\r\n        async fetchStudents() {\r\n            try {\r\n                const response = await axios.get('absen/all-students', {\r\n                    params: {\r\n                        id_jemaat: this.studentId,\r\n                        nama: this.name,\r\n                        tgl_lahir: this.birth,\r\n                        kelas: this.kelas,\r\n                        no_telp: this.no_telp,\r\n                        gender: this.gender,\r\n                        email: this.email,\r\n                        sekolah: this.school,\r\n                        temp_lahir: this.birth_place,\r\n                        no_telp_ortu: this.no_telp_ortu,\r\n                        daerah: this.daerah,\r\n                        kecamatan: this.kecamatan,\r\n                        alamat: this.address,\r\n                        status: this.status,\r\n                        foto: this.foto\r\n                    }\r\n                });\r\n                console.log(response)\r\n                this.students = response.data;\r\n            } catch (error) {\r\n                console.error('Error fetching absents:', error);\r\n            }\r\n        },\r\n        formatDate(dateString) {\r\n            const date = new Date(dateString);\r\n            const day = date.getDate().toString().padStart(2, '0');\r\n            const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n            const year = date.getFullYear();\r\n            return `${day}-${month}-${year}`;\r\n        },\r\n        closeEditModal() {\r\n            // Close edit modal\r\n            this.showEditModal = false;\r\n        },\r\n        editStudent(student) {\r\n            // Set edited student data and show edit modal\r\n            console.log('edit student msuk');\r\n            console.log(student.id_jemaat);\r\n            console.log('Editing student:', student);\r\n            this.editedStudent = {\r\n                id_jemaat: student.id_jemaat,\r\n                nama: student.nama,\r\n                email: student.email,\r\n                no_telp: student.no_telp,\r\n                gender: student.gender,\r\n                hobi: student.hobi,\r\n                sekolah: student.sekolah,\r\n                tgl_lahir: student.tgl_lahir,\r\n                temp_lahir: student.temp_lahir,\r\n                no_telp_ortu: student.no_telp_ortu,\r\n                kelas: student.kelas,\r\n                daerah: student.daerah,\r\n                kecamatan: student.kecamatan,\r\n                alamat: student.alamat,\r\n                foto: student.foto,\r\n                status: student.status\r\n            };\r\n            this.showEditModal = true;\r\n            console.log(this.showEditModal);\r\n        },\r\n        submitEditForm() {\r\n            // Send a request to the server to update the student data\r\n            axios.post('absen/edit-data-jemaat', this.editedStudent)\r\n                .then(() => {\r\n                    // Update the student data in the UI\r\n                    const updatedStudentIndex = this.students.findIndex(student => student.id_jemaat === this.editedStudent.id_jemaat);\r\n                    if (updatedStudentIndex !== -1) {\r\n                        this.students[updatedStudentIndex] = { ...this.editedStudent };\r\n                    }\r\n                    // Close the edit modal\r\n                    this.showEditModal = false;\r\n                    // Reset the edited student data\r\n                    this.editedStudent = {\r\n                        nama: '',\r\n                        email: '',\r\n                        no_telp: '',\r\n                        gender: '',\r\n                        hobi: '',\r\n                        sekolah: '',\r\n                        tgl_lahir: '',\r\n                        temp_lahir: '',\r\n                        no_telp_ortu: '',\r\n                        kelas: '',\r\n                        daerah: '',\r\n                        kecamatan: '',\r\n                        alamat: '',\r\n                        foto: 'nanana',\r\n                        status: ''\r\n                    };\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error updating student data:', error);\r\n                    // Optionally, display an error message to the user\r\n                });\r\n        }, deleteStudent(studentId) {\r\n            // Send a DELETE request to delete the student by id_jemaat\r\n            axios.delete(`absen/delete-jemaat?id_jemaat=${studentId}`)\r\n                .then(() => {\r\n                    // If deletion is successful, remove the student from the UI\r\n                    this.students = this.students.filter(student => student.id_jemaat !== studentId);\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error deleting student:', error);\r\n                    // Optionally, display an error message to the user\r\n                });\r\n        }\r\n    },\r\n};\r\n</script>\r\n\r\n<style>\r\n.modalform {\r\n    display: block !important;\r\n    /* Force modal to be visible */\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    /* Semi-transparent background */\r\n    z-index: 1000;\r\n    /* Ensure modal appears above other content */\r\n}\r\n\r\n.modal-content-section {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    background-color: #fefefe;\r\n    padding: 20px;\r\n}\r\n\r\n/* Close button styles */\r\n.close {\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 10px;\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n    color: #aaa;\r\n}\r\n\r\n.close:hover,\r\n.close:focus {\r\n    color: #000;\r\n}\r\n\r\n/* Form input styles */\r\nform label {\r\n    display: block;\r\n    margin-bottom: 5px;\r\n}\r\n\r\nform input[type=\"text\"] {\r\n    width: 100%;\r\n    padding: 8px;\r\n    margin-bottom: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n}\r\n\r\n/* Submit button styles */\r\nform button {\r\n    padding: 10px 20px;\r\n    background-color: #007bff;\r\n    color: #fff;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n}\r\n\r\nform button:hover {\r\n    background-color: #0056b3;\r\n}\r\n\r\n/* Add your styles here */\r\n</style>"],"mappings":";;EAgESA,KAAK,EAAC;AAAiB;;EACnBA,KAAK,EAAC;AAAQ;gCACfC,mBAAA,CAAmB,YAAf,YAAU;;EAETD,KAAK,EAAC;AAAiB;;EACnBA,KAAK,EAAC;AAAkB;;EAClBA,KAAK,EAAC;AAAgC;gCACzCC,mBAAA,CAOQ;EAPDC,KAAgD,EAAhD;IAAA;IAAA;IAAA;EAAA;AAAgD,I,aACnDD,mBAAA,CAKK,a,aAJDA,mBAAA,CAAiC;EAA7BE,KAAK,EAAC;AAAK,GAAC,cAAY,G,aAC5BF,mBAAA,CAA+B;EAA3BE,KAAK,EAAC;AAAK,GAAC,YAAU,G,aAC1BF,mBAAA,CAA8B;EAA1BE,KAAK,EAAC;AAAK,GAAC,WAAS,G,aACzBF,mBAAA,CAA2B;EAAvBE,KAAK,EAAC;AAAK,GAAC,QAAM,E;;uBAZlDC,mBAAA,CA4BM,OA5BNC,UA4BM,GA3BFJ,mBAAA,CA0BM,OA1BNK,UA0BM,GAzBFC,UAAmB,EAEnBN,mBAAA,CAsBM,OAtBNO,UAsBM,GArBFP,mBAAA,CAoBM,OApBNQ,UAoBM,GAnBFR,mBAAA,CAkBQ,SAlBRS,UAkBQ,GAjBJC,UAOQ,EACRV,mBAAA,CAQQ,iB,kBAPJG,mBAAA,CAMKQ,SAAA,QAAAC,WAAA,CAN0BC,KAAA,CAAAC,QAAQ,GAA3BC,OAAO,EAAEC,KAAK;yBAA1Bb,mBAAA,CAMK;MANqCc,GAAG,EAAED;IAAK,IAChDhB,mBAAA,CAA2B,YAAAkB,gBAAA,CAApBH,OAAO,CAACI,IAAI,kBACnBnB,mBAAA,CAA4C,YAAAkB,gBAAA,CAArCE,QAAA,CAAAC,UAAU,CAACN,OAAO,CAACO,SAAS,mBACnCtB,mBAAA,CAA4B,YAAAkB,gBAAA,CAArBH,OAAO,CAACQ,KAAK,kBACpBvB,mBAAA,CAA8B,YAAAkB,gBAAA,CAAvBH,OAAO,CAACS,OAAO,kBACtBxB,mBAAA,CAA6B,YAAAkB,gBAAA,CAAtBH,OAAO,CAACU,MAAM,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}